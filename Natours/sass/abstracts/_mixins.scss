@mixin clearfix {
  // To fix height collapse when using float left or right
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin positionCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
}

// MEDIA QUERY MANAGER
/*
Screens     max/min-width & em unit     Devices

0-600px     (max-width: 37.5em/600px)   Phone
600-900px   (max-width: 56.25em/900px)  Tablet portrait
900-1200px  (max-width: 75em/1200px)    Tablet landscape
1200-1800px (max-width: 1800px)         **already optimized**
1800+       (min-width: 112.5em/1800px) Large desktops

$breakpoint argument choices:
- phone (< 37.5em/600px)
- tab-port (< 56.25em/900px)
- tab-land (< 75em/1200px)
- lg-desk (> 112.5em/1800px)

ORDER: base + typography > general layout + grid > page layout > components
*/

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) /* < 600px */ {
      @content;
    }
  }

  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) /* < 900px */ {
      @content;
    }
  }

  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) /* < 1200px */ {
      @content;
    }
  }

  @if $breakpoint == lg-desk {
    @media only screen and (min-width: 112.5em) /* > 1800px */ {
      @content;
    }
  }
}
